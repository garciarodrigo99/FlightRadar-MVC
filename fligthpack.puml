@startuml
class es.ull.patrones.practica7.FlightPck.EstadoVuelo.Landed {
+ Estado checkEstado()
+ String toString()
+ String statusString()
}
class es.ull.patrones.practica7.FlightPck.EstadoVuelo.BeforeTO {
+ Estado checkEstado()
+ String toString()
+ String statusString()
}
class es.ull.patrones.practica7.FlightPck.EstadoVuelo.OnAir {
+ Estado checkEstado()
+ String toString()
+ String statusString()
}
interface es.ull.patrones.practica7.FlightPck.suscriptionObject {
~ String getId()
~ String checkInformation()
~ String getInitialMessage()
}
abstract class es.ull.patrones.practica7.FlightPck.EstadoVuelo.Estado {
# Flight flight
+ {abstract}Estado checkEstado()
+ {abstract}String toString()
+ {abstract}String statusString()
}
class es.ull.patrones.practica7.FlightPck.Status {
+ Integer[] estimated
+ Integer[] real
+ Integer[] scheduled
}
class es.ull.patrones.practica7.FlightPck.Flight {
- String id
- String registration
- String fNumber
- String originAptIATA
- String destinationAptIATA
- Status status
# String statusURL
# Estado estado
+ String getId()
+ Status getStatus()
+ String getInitialMessage()
- void updateStatus()
- void setEstado()
+ String checkInformation()
}


es.ull.patrones.practica7.FlightPck.EstadoVuelo.Estado <|-- es.ull.patrones.practica7.FlightPck.EstadoVuelo.Landed
es.ull.patrones.practica7.FlightPck.EstadoVuelo.Estado <|-- es.ull.patrones.practica7.FlightPck.EstadoVuelo.BeforeTO
es.ull.patrones.practica7.FlightPck.EstadoVuelo.Estado <|-- es.ull.patrones.practica7.FlightPck.EstadoVuelo.OnAir
es.ull.patrones.practica7.FlightPck.suscriptionObject <|.. es.ull.patrones.practica7.FlightPck.Flight
@enduml